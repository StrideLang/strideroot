module BandLimitedSaw {
    ports:      [
        mainOutputPort OutputPort {
            name:       'output'
            block:      Output
            meta:       "The module's primary output port."
        }
        propertyInputPort FrequencyPort {
            name:       'frequency'
            block:      Frequency
            meta:       "The frequency of the oscillator in Hz."
        }
    ]
    blocks:     [
        signal Output {
            default:    0.0
        }
        signal Frequency {
            default:    220.0
            rate:       FrequencyPort.rate
            domain:     FrequencyPort.domain
        }
        signal Osc {
            default:    0.0
            rate:       OutputPort.rate
            domain:     OutputPort.domain
        }
        signal History {
            default:    0.0
            rate:       OutputPort.rate
            domain:     OutputPort.domain
        }
        signal PhaseResidue {
            default:    0.0
            rate:       OutputPort.rate
            domain:     OutputPort.domain
        }
        signal Phase {
            default:    0.0 # FIMXE needs to be PhaseResidue
            rate:       OutputPort.rate
            domain:     OutputPort.domain
            reset:      ResetPhase
        }
        trigger ResetPhase {}
        reaction CorrectPhase {
            terminateWhen:  Done
            onTermination:  ResetPhase;
			blocks: [
				trigger Done {}
			]
            streams:    [
                Phase - 2.0 >> PhaseResidue;
                on >> Done;
            ]
        }
        signal W {
            default:    0.0
            rate:       none
            domain:     FrequencyPort.domain
        }
        signal N {
            default:    0.0
            rate:       none
            domain:     FrequencyPort.domain
        }
        signal Scaling {
            default:    0.0
            rate:       none
            domain:     FrequencyPort.domain
        }
        signal DC {
            default:    0.0
            rate:       none
            domain:     FrequencyPort.domain
        }
        signal Norm {
            default:    0.0
            rate:       none
            domain:     FrequencyPort.domain
        }
    ]
    streams:    [
        Frequency / OutputPort.rate / 2.0 >> W;
        0.5 - W >> N;
        13.0 * N * N * N * N >> Scaling;
        0.376 - W * 0.752 >> DC;
        1.0 - 2.0 * W >> Norm;

        Phase + 2.0 * W >> Phase;
        [Phase, 1.0] >> GreaterOrEqual() >> CorrectPhase();
        2.0 * _Pi * ( Phase + Osc * Scaling ) >> Sin () >> Level ( bias: Osc ) >> Level ( gain: 0.5 ) >> Osc;
        (( 2.5 * Osc - 1.5 * History ) + DC ) * Norm >> Output;
        Osc >> History;
    ]
}
