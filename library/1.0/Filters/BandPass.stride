
module BandPass {
	ports: [
		port OutputPort {
            name:       'output'
            main: on
            direction:  'output'
        },
        port InputPort {
            name:       'input'
            main: on
            direction:  'input'
        },
		port CenterFrequencyProperty {
			name: "centerFrequency"
			block: CenterFrequency
			meta: "The center frequency of the filter."
		},
		port QFactorProperty {
			name: "qFactor"
			block: QFactor
			meta: "The Q value of the filter."
		},
		port GainProperty {
			name: "gain"
			block: Gain
			meta: ""
		}
#		port ResetProperty {
#			name: "reset"
#			block: Reset
#			meta: "Resets the internal memory of the filter when set to on."
#		}
	]
	blocks: [
		signal CenterFrequency {},
		signal QFactor { default: 1.0},
		signal Gain {},
#		switch Reset {},
		signal Xn[2] {},
		signal Yn[2] {},
		signal A[2] {},	
		signal B[3] {},
		signal Temp {},
		signal W0 {},
		signal Alpha {},
		signal W0Cos {}
	]
	streams: [

		2 * _Pi * CenterFrequency /AudioRate >> W0 >> Sin() >> Temp;
		Temp / (2*QFactor) >> Alpha >> B[1];
		-Alpha >> B[3];
		1 + Alpha >> A[1];
		W0 >> Cos() >> W0Cos;
		[W0Cos, 2] >> Multiply() >> A[2];
		1 - Alpha >> A[3];

		# Filter Processing
		Gain * (Input * B[1] + Xn[1] * B[2] + Xn[2] * B[3] - Yn[1] * A[2] - Yn[2] * A[3]) / A[1] >> Output;
		Xn[1] >> Xn[2];
		Input >> Xn[1];
		Yn[1] >> Yn[2];
		Output >> Yn[1];
	]
	meta: "Band pass filter"
}
